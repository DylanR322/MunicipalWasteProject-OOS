# now let's try to apply it to the whole table
gsub(" ", "-", page) # ah, see the issue is that the gap between short names and first number is 18, but making the
# gap that big to not accidentally create NA's there is also going to then be too big for doubles and miss them.
page <- gsub("\\W                ", "      NA      ", page)
nextbit <- page[grep("Barrington", page): grep("Woonsocket", page)] # only take the parts that are relevant,
# i.e. skip the col names
withcols <- str_split_fixed(nextbit, " {2,}", 16) # split the row into columns when 2 or more spaces, and make 16 cols
RIdtal <- data.frame(withcols) # make it a dataframe
names(RIdtal) <- c("Municipality",
"2020 Pop Projection",
"HH Served",
"Solid Waste (Tons)",
"MRF Recycling",
"Composted Material",
"Scrap Metal",
"Clothing",
"Other Recycling",
"Total Waste Generated (Tons)",
"Tons of Trash Landfilled per HH",
"MRF Recycling Rate",
"Mandatory Recycling Rate",
"Overall Diversion Rate",
"Pounds Rejected Recycling per HH Served",
"Rejected Recycling (Tons)") # rewrite the column names!
View(RIdtal)
gsub("                  {18,19}", "        NA        ", page)
#### OOS Waste Data Project
## RI Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
setwd("~/Desktop/Trash Data Project OOS/Data/")
### Trash Numbers --------------------
# when there are blanks within a row, it messes things up cause the blanks are treated like they're just spaces I think
RIpdf <- pdf_text("RIMunicipalData.pdf") # read it in
rows <- strsplit(RIpdf, "\n") # break it all into rows
page <- rows[[1]] # look at a particular page
page <- trimws(page) # get rid of extra spaces
# now we have all the rows on that page. We need to fix cases like central falls that have blank rows by inserting
gsub(" ", "-", page[23]) # this is going to show us how many spaces there are, we will do it for others too. 21 here
gsub(" ", "-", page[34]) # 20
gsub(" ", "-", page[35]) # 32 over two gaps
gsub(" ", "-", page[36]) # 32 over two
gsub(" ", "-", page[52]) # 9 seems to be the longest gap you can have naturally?
gsub("                ", "      NA      ", page[23])
gsub("                ", "      NA      ", page[34])
gsub("                ", "      NA      ", page[35])
# now let's try to apply it to the whole table
gsub(" ", "-", page) # ah, see the issue is that the gap between short names and first number is 18, but making the
# gap that big to not accidentally create NA's there is also going to then be too big for doubles and miss them.
page <- gsub("                  {18,19}", "        NA        ", page)
nextbit <- page[grep("Barrington", page): grep("Woonsocket", page)] # only take the parts that are relevant,
# i.e. skip the col names
withcols <- str_split_fixed(nextbit, " {2,}", 16) # split the row into columns when 2 or more spaces, and make 16 cols
RIdtal <- data.frame(withcols) # make it a dataframe
names(RIdtal) <- c("Municipality",
"2020 Pop Projection",
"HH Served",
"Solid Waste (Tons)",
"MRF Recycling",
"Composted Material",
"Scrap Metal",
"Clothing",
"Other Recycling",
"Total Waste Generated (Tons)",
"Tons of Trash Landfilled per HH",
"MRF Recycling Rate",
"Mandatory Recycling Rate",
"Overall Diversion Rate",
"Pounds Rejected Recycling per HH Served",
"Rejected Recycling (Tons)") # rewrite the column names!
gsub(" {18,19}", "        NA        ", page)
gsub(" {17,18}", "        NA        ", page)
gsub(" {18,18}", "        NA        ", page)
gsub("                  \\W", "        NA        ", page)
gsub("                \\W", "      NA      ", page)
gsub("                \\w", "      NA      ", page)
gsub("\w*(?<![a-z])                ", "      NA      ", page)
gsub("\\w*(?<![a-z])                ", "      NA      ", page)
gsub("\w*(?<![a-z])                ", "      NA      ", page)
gsub("\\w*(?<!a-z)                ", "      NA      ", page)
gsub("\\w*(?<!a)                ", "      NA      ", page)
gsub("(?<![a-z])                ", "      NA      ", page)
gsub("(?<![a-z])                ", "      NA      ", page, perl = TRUE)
gsub("*\w(?<![a-z])                ", "      NA      ", page, perl = TRUE)
gsub("\w*(?<![a-z])                ", "      NA      ", page, perl = TRUE)
gsub("\\w*(?<![a-z])                ", "      NA      ", page, perl = TRUE)
#### OOS Waste Data Project
## RI Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
setwd("~/Desktop/Trash Data Project OOS/Data/")
### Trash Numbers --------------------
# Write the function to scan through the table!
scrable <- function(pdf_file,
pageoftable,
first_val,
last_val,
number_columns,
column_names) {
file <- pdf_text(pdf_file)
file <- strsplit(file, "\n")
page <- file[[pageoftable]] # look at a particular page
page <- trimws(page) # get rid of extra spaces
thetable <- page[grep(first_val, page): grep(last_val, page)]
thetable <- str_split_fixed(thetable, " {2,}", number_columns)
dataframe <- data.frame(thetable)
names(dataframe) <- column_names
return(dataframe)
}
# Use it on RI data
RIdta <- scrable("RIMunicipalData.pdf",
1,
"Barrington",
"Woonsocket",
16,
c("Municipality",
"2020 Pop Projection",
"HH Served",
"Solid Waste (Tons)",
"MRF Recycling",
"Composted Material",
"Scrap Metal",
"Clothing",
"Other Recycling",
"Total Waste Generated (Tons)",
"Tons of Trash Landfilled per HH",
"MRF Recycling Rate",
"Mandatory Recycling Rate",
"Overall Diversion Rate",
"Pounds Rejected Recycling per HH Served",
"Rejected Recycling (Tons)"))
View(RIdta)
RIdta[4, c("", RIdta[4, 8:15])]
RIdta[4, c(" ", RIdta[4, 8:15])]
RIdta[4, c(8:15)]
RIdta[4, 8:15]
RIdta[4, c(8:15)] <- RIdta[4, c(" ", RIdta[4, 8:15])]
RIdta[4, c(8:15)] <- RIdta[4, c(0, RIdta[4, 8:15])]
RIdta[4, 8:15]
RIdta[4, c(8:15)] <- RIdta[4, c(0, 35, 8072, 1.17, 20.9, 23.1, 23.5, 12, 32)]
RIdta[4, c(8:15)]
RIdta[4, 8:15]
c(0, RIdta[4, 8:15])
RIdta[4, c(8:15)] <- c(0, RIdta[4, 8:15])
RIdta[4, c(8:15)]
View(RIdta)
c(0, RIdta[4, 8:15])
#### OOS Waste Data Project
## RI Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
setwd("~/Desktop/Trash Data Project OOS/Data/")
### Trash Numbers --------------------
# Write the function to scan through the table!
scrable <- function(pdf_file,
pageoftable,
first_val,
last_val,
number_columns,
column_names) {
file <- pdf_text(pdf_file)
file <- strsplit(file, "\n")
page <- file[[pageoftable]] # look at a particular page
page <- trimws(page) # get rid of extra spaces
thetable <- page[grep(first_val, page): grep(last_val, page)]
thetable <- str_split_fixed(thetable, " {2,}", number_columns)
dataframe <- data.frame(thetable)
names(dataframe) <- column_names
return(dataframe)
}
# Use it on RI data
RIdta <- scrable("RIMunicipalData.pdf",
1,
"Barrington",
"Woonsocket",
16,
c("Municipality",
"2020 Pop Projection",
"HH Served",
"Solid Waste (Tons)",
"MRF Recycling",
"Composted Material",
"Scrap Metal",
"Clothing",
"Other Recycling",
"Total Waste Generated (Tons)",
"Tons of Trash Landfilled per HH",
"MRF Recycling Rate",
"Mandatory Recycling Rate",
"Overall Diversion Rate",
"Pounds Rejected Recycling per HH Served",
"Rejected Recycling (Tons)"))
RIdta[4, c(8:15)]
RIdta[4, c(8:16)] <- c(0, RIdta[4, 8:15])
RIdta[12, c(8:16)] <- c(0, RIdta[12, 8:15])
RIdta[15, c(8:16)] <- c(0, RIdta[12, 8:15]) # jamestown
RIdta[15, c(7:16)] <- c(0, RIdta[12, 7:14]) # johnston
RIdta[15, c(7:16)] <- c(0, RIdta[12, 7:14])
#### OOS Waste Data Project
## RI Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
setwd("~/Desktop/Trash Data Project OOS/Data/")
### Trash Numbers --------------------
# Write the function to scan through the table!
scrable <- function(pdf_file,
pageoftable,
first_val,
last_val,
number_columns,
column_names) {
file <- pdf_text(pdf_file)
file <- strsplit(file, "\n")
page <- file[[pageoftable]] # look at a particular page
page <- trimws(page) # get rid of extra spaces
thetable <- page[grep(first_val, page): grep(last_val, page)]
thetable <- str_split_fixed(thetable, " {2,}", number_columns)
dataframe <- data.frame(thetable)
names(dataframe) <- column_names
return(dataframe)
}
# Use it on RI data
RIdta <- scrable("RIMunicipalData.pdf",
1,
"Barrington",
"Woonsocket",
16,
c("Municipality",
"2020 Pop Projection",
"HH Served",
"Solid Waste (Tons)",
"MRF Recycling",
"Composted Material",
"Scrap Metal",
"Clothing",
"Other Recycling",
"Total Waste Generated (Tons)",
"Tons of Trash Landfilled per HH",
"MRF Recycling Rate",
"Mandatory Recycling Rate",
"Overall Diversion Rate",
"Pounds Rejected Recycling per HH Served",
"Rejected Recycling (Tons)"))
# NOTE: There are errors in this table because of the empty spaces. However, it cannot quite be fixed, see the appendix.
# Thus, I will handcode some values to fix a few rows.
RIdta[4, c(8:16)] <- c(0, RIdta[4, 8:15]) # central falls
RIdta[12, c(8:16)] <- c(0, RIdta[12, 8:15]) # Foster
RIdta[15, c(8:16)] <- c(0, RIdta[12, 8:15]) # jamestown
RIdta[15, c(7:16)] <- c(0, 0, RIdta[12, 7:14]) # johnston
RIdta[15, c(7:16)] <- c(0, 0, RIdta[12, 7:14]) # lincoln
#### OOS Waste Data Project
## RI Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
setwd("~/Desktop/Trash Data Project OOS/Data/")
### Trash Numbers --------------------
# Write the function to scan through the table!
scrable <- function(pdf_file,
pageoftable,
first_val,
last_val,
number_columns,
column_names) {
file <- pdf_text(pdf_file)
file <- strsplit(file, "\n")
page <- file[[pageoftable]] # look at a particular page
page <- trimws(page) # get rid of extra spaces
thetable <- page[grep(first_val, page): grep(last_val, page)]
thetable <- str_split_fixed(thetable, " {2,}", number_columns)
dataframe <- data.frame(thetable)
names(dataframe) <- column_names
return(dataframe)
}
# Use it on RI data
RIdta <- scrable("RIMunicipalData.pdf",
1,
"Barrington",
"Woonsocket",
16,
c("Municipality",
"2020 Pop Projection",
"HH Served",
"Solid Waste (Tons)",
"MRF Recycling",
"Composted Material",
"Scrap Metal",
"Clothing",
"Other Recycling",
"Total Waste Generated (Tons)",
"Tons of Trash Landfilled per HH",
"MRF Recycling Rate",
"Mandatory Recycling Rate",
"Overall Diversion Rate",
"Pounds Rejected Recycling per HH Served",
"Rejected Recycling (Tons)"))
# NOTE: There are errors in this table because of the empty spaces. However, it cannot quite be fixed, see the appendix.
# Thus, I will handcode some values to fix a few rows.
RIdta[4, c(8:16)] <- c(0, RIdta[4, 8:15]) # central falls
RIdta[12, c(8:16)] <- c(0, RIdta[12, 8:15]) # Foster
RIdta[15, c(8:16)] <- c(0, RIdta[12, 8:15]) # jamestown
RIdta[16, c(7:16)] <- c(0, 0, RIdta[12, 7:14]) # johnston
RIdta[17, c(7:16)] <- c(0, 0, RIdta[12, 7:14]) # lincoln
#### OOS Waste Data Project
## RI Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
setwd("~/Desktop/Trash Data Project OOS/Data/")
### Trash Numbers --------------------
# Write the function to scan through the table!
scrable <- function(pdf_file,
pageoftable,
first_val,
last_val,
number_columns,
column_names) {
file <- pdf_text(pdf_file)
file <- strsplit(file, "\n")
page <- file[[pageoftable]] # look at a particular page
page <- trimws(page) # get rid of extra spaces
thetable <- page[grep(first_val, page): grep(last_val, page)]
thetable <- str_split_fixed(thetable, " {2,}", number_columns)
dataframe <- data.frame(thetable)
names(dataframe) <- column_names
return(dataframe)
}
# Use it on RI data
RIdta <- scrable("RIMunicipalData.pdf",
1,
"Barrington",
"Woonsocket",
16,
c("Municipality",
"2020 Pop Projection",
"HH Served",
"Solid Waste (Tons)",
"MRF Recycling",
"Composted Material",
"Scrap Metal",
"Clothing",
"Other Recycling",
"Total Waste Generated (Tons)",
"Tons of Trash Landfilled per HH",
"MRF Recycling Rate",
"Mandatory Recycling Rate",
"Overall Diversion Rate",
"Pounds Rejected Recycling per HH Served",
"Rejected Recycling (Tons)"))
# NOTE: There are errors in this table because of the empty spaces. However, it cannot quite be fixed, see the appendix.
# Thus, I will handcode some values to fix a few rows.
RIdta[4, c(8:16)] <- c(0, RIdta[4, 8:15]) # central falls
RIdta[12, c(8:16)] <- c(0, RIdta[12, 8:15]) # Foster
RIdta[15, c(8:16)] <- c(0, RIdta[15, 8:15]) # jamestown
RIdta[16, c(7:16)] <- c(0, 0, RIdta[16, 7:14]) # johnston
RIdta[17, c(7:16)] <- c(0, 0, RIdta[17, 7:14]) # lincoln
RIdta[28, c(7:16)] <- c(0, RIdta[28, 8:16]) # providence
#### OOS Waste Data Project
## RI Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
setwd("~/Desktop/Trash Data Project OOS/Data/")
### Trash Numbers --------------------
# Write the function to scan through the table!
scrable <- function(pdf_file,
pageoftable,
first_val,
last_val,
number_columns,
column_names) {
file <- pdf_text(pdf_file)
file <- strsplit(file, "\n")
page <- file[[pageoftable]] # look at a particular page
page <- trimws(page) # get rid of extra spaces
thetable <- page[grep(first_val, page): grep(last_val, page)]
thetable <- str_split_fixed(thetable, " {2,}", number_columns)
dataframe <- data.frame(thetable)
names(dataframe) <- column_names
return(dataframe)
}
# Use it on RI data
RIdta <- scrable("RIMunicipalData.pdf",
1,
"Barrington",
"Woonsocket",
16,
c("Municipality",
"2020 Pop Projection",
"HH Served",
"Solid Waste (Tons)",
"MRF Recycling",
"Composted Material",
"Scrap Metal",
"Clothing",
"Other Recycling",
"Total Waste Generated (Tons)",
"Tons of Trash Landfilled per HH",
"MRF Recycling Rate",
"Mandatory Recycling Rate",
"Overall Diversion Rate",
"Pounds Rejected Recycling per HH Served",
"Rejected Recycling (Tons)"))
# NOTE: There are errors in this table because of the empty spaces. However, it cannot quite be fixed, see the appendix.
# Thus, I will handcode some values to fix a few rows.
RIdta[4, c(8:16)] <- c(0, RIdta[4, 8:15]) # central falls
RIdta[12, c(8:16)] <- c(0, RIdta[12, 8:15]) # Foster
RIdta[15, c(8:16)] <- c(0, RIdta[15, 8:15]) # jamestown
RIdta[16, c(7:16)] <- c(0, 0, RIdta[16, 7:14]) # johnston
RIdta[17, c(7:16)] <- c(0, 0, RIdta[17, 7:14]) # lincoln
RIdta[28, c(7:16)] <- c(0, RIdta[28, 7:15])
#### OOS Waste Data Project
## RI Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
setwd("~/Desktop/Trash Data Project OOS/Data/")
### Trash Numbers --------------------
# Write the function to scan through the table!
scrable <- function(pdf_file,
pageoftable,
first_val,
last_val,
number_columns,
column_names) {
file <- pdf_text(pdf_file)
file <- strsplit(file, "\n")
page <- file[[pageoftable]] # look at a particular page
page <- trimws(page) # get rid of extra spaces
thetable <- page[grep(first_val, page): grep(last_val, page)]
thetable <- str_split_fixed(thetable, " {2,}", number_columns)
dataframe <- data.frame(thetable)
names(dataframe) <- column_names
return(dataframe)
}
# Use it on RI data
RIdta <- scrable("RIMunicipalData.pdf",
1,
"Barrington",
"Woonsocket",
16,
c("Municipality",
"2020 Pop Projection",
"HH Served",
"Solid Waste (Tons)",
"MRF Recycling",
"Composted Material",
"Scrap Metal",
"Clothing",
"Other Recycling",
"Total Waste Generated (Tons)",
"Tons of Trash Landfilled per HH",
"MRF Recycling Rate",
"Mandatory Recycling Rate",
"Overall Diversion Rate",
"Pounds Rejected Recycling per HH Served",
"Rejected Recycling (Tons)"))
# NOTE: There are errors in this table because of the empty spaces. However, it cannot quite be fixed, see the appendix.
# Thus, I will handcode some values to fix a few rows.
RIdta[4, c(8:16)] <- c(0, RIdta[4, 8:15]) # central falls
RIdta[12, c(8:16)] <- c(0, RIdta[12, 8:15]) # Foster
RIdta[15, c(8:16)] <- c(0, RIdta[15, 8:15]) # jamestown
RIdta[16, c(7:16)] <- c(0, 0, RIdta[16, 7:14]) # johnston
RIdta[17, c(7:16)] <- c(0, 0, RIdta[17, 7:14]) # lincoln
RIdta[28, c(7:16)] <- c(0, RIdta[28, 7:15]) # providence
RIdta[30, c(8:16)] <- c(0, RIdta[30, 8:15]) # scituate
RIdta[34, c(8:16)] <- c(0, RIdta[34, 8:15]) # warren
RIdta[35, c(8:16)] <- c(0, RIdta[35, 8:15]) # warwick
