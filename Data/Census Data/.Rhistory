ri <- import("ri.csv")
dta <- bind_rows(ma, ri)
dta <- dta[, -1] # drop V1
View(dta)
me <- import("me.csv")
View(me)
me <- me[, -1] # drop v1
dta <- bind_rows(dta, me)
View(dta)
#### OOS Waste Data Project
## Merging Data from Different States
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("~/Desktop/Trash Data Project OOS/Files/")
### MA + RI --------------------
ma <- import("ma.csv")
ri <- import("ri.csv")
dta <- bind_rows(ma, ri)
dta <- dta[, -1] # drop V1
### (MA, RI) + ME --------------------
me <- import("me.csv")
me <- me[, -1] # drop v1
dta <- bind_rows(dta, me)
setwd("~/Desktop/Trash Data Project OOS/Data/Census Data/")
marime <- import("MARIMECityData.csv")
# drop extra cols
marime <- marime[, -c(1:3, 5:51, 53:55)] # these are totally extra, have like no info
marime <- marime[, -c(4, 6, 8:15)] # these are extra cols for pop density and for number of households
# rename cols
names(marime)
names(marime)[1] <- "state"
names(marime)[2] <- "Municipality"
names(marime)[3] <- "Population"
names(marime)[4] <- "PopulationDensity"
names(marime)[5] <- "Households"
names(marime)[6] <- "PopOver25"
names(marime)[7] <- "LessHS"
names(marime)[8] <- "HS"
names(marime)[9] <- "BachelororMore"
names(marime)[10] <- "MedIncome"
names(marime)[11] <- "AvgIncome"
names(marime)[12] <- "Gini"
marime$PctLessHS <- marime$LessHS / marime$PopOver25
marime$PctHS <- marime$HS / marime$PopOver25
marime$PctBachelororMore <- marime$BachelororMore / marime$PopOver25
marime <- marime[, -c(6:9)]
marime$Municipality <- gsub(" town", "", marime$Municipality)
marime$Municipality <- gsub(" Town", "", marime$Municipality)# this is a little quick and dirty, but I think it works
marime$Municipality <- gsub(" city", "", marime$Municipality)
marime$Municipality <- gsub(" plantation", "", marime$Municipality)
marime$state <- toupper(marime$state)
marime <- marime %>% unite("id", 2:1, sep = "---", remove = TRUE)
dta <- dta %>% unite("id", 2:1, sep = "---", remove = TRUE)
dta$id[dta$id %notin% marime$id]
marime$id[marime$id == "Manchester-by-the-Sea---MA"] <- "Manchester---MA"
dta <- merge(dta, marime, by = "id")
dta <- separate(dta, id,
c("Municipality", "State"),
sep = "---")
setwd("~/Desktop/Trash Data Project OOS/Files/")
View(dta)
fl <- import("fl.csv")
View(fl)
fl <- fl[, -1] # drop V1
View(dta)
View(fl)
names(dta)[1] <- "GovUnit" # something that can be standard between the municipalities of most of our data and the
# counties in Florida
names(fl)[1] <- "GovUnit"
View(dta)
names(dta)
#### OOS Waste Data Project
## Merging Data from Different States
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(pdftools)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("~/Desktop/Trash Data Project OOS/Files/")
### MA + RI --------------------
ma <- import("ma.csv")
ri <- import("ri.csv")
dta <- bind_rows(ma, ri)
dta <- dta[, -1] # drop V1
### (MA, RI) + ME --------------------
me <- import("me.csv")
me <- me[, -1] # drop v1
dta <- bind_rows(dta, me)
### (MA, RI, ME) + Census Data --------------------
setwd("~/Desktop/Trash Data Project OOS/Data/Census Data/")
marime <- import("MARIMECityData.csv")
# drop extra cols
marime <- marime[, -c(1:3, 5:51, 53:55)] # these are totally extra, have like no info
marime <- marime[, -c(4, 6, 8:15)] # these are extra cols for pop density and for number of households
# rename cols
names(marime)
names(marime)[1] <- "state"
names(marime)[2] <- "Municipality"
names(marime)[3] <- "Population"
names(marime)[4] <- "PopulationDensity"
names(marime)[5] <- "Households"
names(marime)[6] <- "PopOver25"
names(marime)[7] <- "LessHS"
names(marime)[8] <- "HS"
names(marime)[9] <- "BachelororMore"
names(marime)[10] <- "MedIncome"
names(marime)[11] <- "AvgIncome"
names(marime)[12] <- "Gini"
# calculate the percentages for different educational attainments then drop extra cols for that
marime$PctLessHS <- marime$LessHS / marime$PopOver25
marime$PctHS <- marime$HS / marime$PopOver25
marime$PctBachelororMore <- marime$BachelororMore / marime$PopOver25
marime <- marime[, -c(6:9)]
# start making a common id by removing extra words and combining with state
marime$Municipality <- gsub(" town", "", marime$Municipality)
marime$Municipality <- gsub(" Town", "", marime$Municipality)# this is a little quick and dirty, but I think it works
marime$Municipality <- gsub(" city", "", marime$Municipality)
marime$Municipality <- gsub(" plantation", "", marime$Municipality)
marime$state <- toupper(marime$state)
marime <- marime %>% unite("id", 2:1, sep = "---", remove = TRUE)
dta <- dta %>% unite("id", 2:1, sep = "---", remove = TRUE)
# see what ones will not get merged then fix them NOTE: I will be leaving most of the maine ones right now, until I
# have updated ME data and know that I may actually be using it.
dta$id[dta$id %notin% marime$id]
marime$id[marime$id == "Manchester-by-the-Sea---MA"] <- "Manchester---MA"
dta <- merge(dta, marime, by = "id")
dta <- separate(dta, id,
c("Municipality", "State"),
sep = "---")
### (MA, RI, ME) + FL --------------------
setwd("~/Desktop/Trash Data Project OOS/Files/")
fl <- import("fl.csv")
fl <- fl[, -1] # drop V1
names(dta)[1] <- "GovUnit" # something that can be standard between the municipalities of most of our data and the
# counties in Florida
names(fl)[1] <- "GovUnit"
# drop the .y populations and households, cause we want to use what the municipalities reported, then rename them
names(dta)[3] <- "Households"
names(dta)[34] <- "Population"
dta <- dta[, -c(39,41)]
# merge
dta <- bind_rows(dta, fl)
View(dta)
#### OOS Waste Data Project
## NC Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("/Users/dylanradley/Desktop/Trash Data Project OOS/Data/NC/")
### Waste + Data --------------------
nc <- import("NC FY2020-21 Recycling Data.xlsx")
nc.orig <- nc
# get the colnames in the right place
colnms <- nc[1, ]
names(nc) <- colnms
# drop the extra row
nc <- nc[-1, ]
# let's try to make the columns that we are interested in, by combining several together. First, type of recycling
nc$ReyclingServiceType <- NA
nc$ReyclingServiceType[nc$`14. No Recycling Program` == 1 | nc$`14. Recycling Program` == 0] <- "None"
nc$ReyclingServiceType[nc$`15. Curbside Recycling Program` == 1 & nc$`25. Dropoff Recycling Program` == 0] <- "Curbside"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 0] <- "Dropoff"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 1] <- "Both"
# now to drop a lot of the recycling cols, including tonnages for the different materials
nc <- nc[, -c(18:27, 37:41, 50:59, 66:101)]
# now to do the same for solid waste collection. Of interest: 6, 70 and 71, 87
nc$TrashServiceType <- NA
nc$TrashServiceType[nc$`5. Solid Waste Services` == 0] <- "None"
nc$TrashServiceType[grepl("at household", nc$`Frequency of primary collection`) |
grepl("at household", nc$`Frequency of secondary collection`)] <- "Curbside"
nc$TrashServiceType[grepl("convenience", nc$`Frequency of primary collection`) |
grepl("convenience", nc$`Frequency of secondary collection`)] <- "Dropoff"
nc$TrashServiceType[(grepl("convenience", nc$`Frequency of primary collection`) &
grepl("at household", nc$`Frequency of secondary collection`)) |
(grepl("at household", nc$`Frequency of primary collection`) &
grepl("convenience", nc$`Frequency of secondary collection`))] <- "Both"
nc$TrashServiceType[is.na(nc$TrashServiceType) & (nc$`5. Solid Waste Services` == 1 & nc$Curbside == 1)] <- "Curbside"
# drop the extra cols now
nc <- nc[, -c(6, 70:71, 87:88)]
# food waste service type. Of interest: 7, 34:39,
nc$FoodServiceType <- NA
nc$FoodServiceType[nc$`43. Curbside Food Waste Program` == 1] <- "Curbside"
nc$FoodServiceType[nc$`43. Dropoff Food Waste Program` == 1] <- "Dropoff"
nc$FoodServiceType[nc$`43. Organics/ Food Waste Recycling Program` == 0] <- "None"
nc$FoodServiceType[nc$`43. Pilot Food Waste Program` == 1] <- "Pilot"
nc$FoodServiceType[nc$`9. Backyard Composting Program (BYC)` == 1] <- "Backyard"
nc <- nc[, -c(7, 34:39)] # drop the extra columns
# now yard waste, 36:39
nc$YardWasteServiceType <- NA
nc$YardWasteServiceType[nc$`49. Yard Waste Program` == 0] <- "None"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected at Convenience Center` == 1 |
nc$`49. Yard Waste Received at Yard Waste, Compost, or LCID Facility` == 1] <- "Dropoff"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected Curbside` == 1] <- "Curbside"
nc <- nc[, -c(36:39)] # drop the extra columns
# now to get rid of household fee and budget columns that I do not need: 85:102, 133:137
nc <- nc[, -c(85:102, 133:137)]
# now if they provide trash, recycling, and compost bins: 9,10,73:75
nc$ProvideTrashCart <- NA
nc$ProvRecycleBinorCart <- NA # do not have this cause I forgot to ask for it? this info does exist and is collected
nc$ProvideCompostBins <- NA
nc$ProvideTrashCart[nc$`Government- provided carts` == 1] <- "Yes"
nc$ProvideTrashCart[nc$`Government- provided carts` == 0] <- "No"
nc$ProvideCompostBins[nc$`10. BYC Bin Distribution/sales` == 1] <- "Yes"
nc$ProvideCompostBins[nc$`10. BYC Bin Distribution/sales` == 0] <- "No"
nc <- nc[, -c(9,10,73:75)]
# now the total tonnages for recycling and for trash: 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105
nc$SolidWasteTons <- NA
nc$RecyclingTons <- NA
nc$YardWasteTons <- NA
numcols <- c(31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:119)
nc[, numcols] <- apply(nc[, numcols], 2, function(x) as.numeric(as.character(x)))
# NOTE if yard waste cannot be properly classified because the variables showing where it goes are blank, let's look
#View(nc[!is.na(nc$`Tons Collected.2`) & (is.na(nc$`Tons sent to End User`) &
is.na(nc$`Tons Received at Local Gov. Mulch or Compost Facility`) &
is.na(nc$`Tons sent for Fuel Use`) &
is.na(nc$`Tons sent to LCID Landfill`) &
is.na(nc$`Tons sent to Other Public Facility`) &
is.na(nc$`Tons sent to Private Facility`)), c(35, 38, 41, 44, 47, 50, 100)])
# well, it's a 5th of all the columns. So... I think that it should actually not just be included, it should be dealt with later
divyardcols <- c(35, 38, 41, 44)
nc$DivertedYardWaste <- NA
nc$DivertedYardWaste <- apply(nc[, divyardcols], 1, function(x) sum(x, na.rm = TRUE))
trashyardcols <- c(47, 50)
nc$DisposedYardWaste <- apply(nc[, trashyardcols], 1, function(x) sum(x, na.rm = TRUE))
# now to make the uncategorized yard waste column
nc$UncatYardWaste <- nc$`Tons Collected.2` - (nc$DivertedYardWaste + nc$DisposedYardWaste)
# now to finally look at trash and recycling
nc$RecyclingTons <- nc$`Tons Collected.1` # this one is more accurate because it has NA's
nc$SolidWasteTons <- nc$`Tons Collected` # this is the trash column
nc <- nc[, -c(31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 119)]# now to drop the extra columns
# now the households served, of interest: View(nc[, c(1, 14:16, 27, 80, 85, 90)])
names(nc)[14] <- "Households"
# to look at the households served, I will break them out into the different programs
names(nc)[80] <- "HHServedTrash"
names(nc)[85] <- "HHServedRecycling"
names(nc)[90] <- "HHServedYard"
nc <- nc[, -c(14:16, 27)]
names(nc)
names(nc)[61] <- "TipFee"
names(nc)[62] <- "PAYT/SMART"
names(nc)[64] <- "PropertyTax"
names(nc)[67] <- "PerHouseCharge"
View(nc[, c(1, 62, 69)])
View(nc[nc$`PAYT/SMART` != nc$`62. PAYT`, c(1, 62, 69)])
nc$`PAYT/SMART`[nc$`PAYT/SMART` == 1 | nc$`62. PAYT` == 1] <- "Yes"
nc$`PAYT/SMART`[nc$`PAYT/SMART` == 0] <- "No"
View(nc)
View(nc[, c(1, 62, 69)])
View(nc[, c(1, 65:73)])
names(nc)
nc <- nc[, -c(63, 65:66, 68:69)]
names(nc)
names(nc)[3] <- "RecyclingEnforcePersonnel"
names(nc)
#### OOS Waste Data Project
## NC Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("/Users/dylanradley/Desktop/Trash Data Project OOS/Data/NC/")
### Waste + Data --------------------
nc <- import("NC FY2020-21 Recycling Data.xlsx")
nc.orig <- nc
# get the colnames in the right place
colnms <- nc[1, ]
names(nc) <- colnms
# drop the extra row
nc <- nc[-1, ]
# let's try to make the columns that we are interested in, by combining several together. First, type of recycling
nc$ReyclingServiceType <- NA
nc$ReyclingServiceType[nc$`14. No Recycling Program` == 1 | nc$`14. Recycling Program` == 0] <- "None"
nc$ReyclingServiceType[nc$`15. Curbside Recycling Program` == 1 & nc$`25. Dropoff Recycling Program` == 0] <- "Curbside"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 0] <- "Dropoff"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 1] <- "Both"
# now to drop a lot of the recycling cols, including tonnages for the different materials
nc <- nc[, -c(18:27, 37:41, 50:59, 66:101)]
# now to do the same for solid waste collection. Of interest: 6, 70 and 71, 87
nc$TrashServiceType <- NA
nc$TrashServiceType[nc$`5. Solid Waste Services` == 0] <- "None"
nc$TrashServiceType[grepl("at household", nc$`Frequency of primary collection`) |
grepl("at household", nc$`Frequency of secondary collection`)] <- "Curbside"
nc$TrashServiceType[grepl("convenience", nc$`Frequency of primary collection`) |
grepl("convenience", nc$`Frequency of secondary collection`)] <- "Dropoff"
nc$TrashServiceType[(grepl("convenience", nc$`Frequency of primary collection`) &
grepl("at household", nc$`Frequency of secondary collection`)) |
(grepl("at household", nc$`Frequency of primary collection`) &
grepl("convenience", nc$`Frequency of secondary collection`))] <- "Both"
nc$TrashServiceType[is.na(nc$TrashServiceType) & (nc$`5. Solid Waste Services` == 1 & nc$Curbside == 1)] <- "Curbside"
# drop the extra cols now
nc <- nc[, -c(6, 70:71, 87:88)]
# food waste service type. Of interest: 7, 34:39,
nc$FoodServiceType <- NA
nc$FoodServiceType[nc$`43. Curbside Food Waste Program` == 1] <- "Curbside"
nc$FoodServiceType[nc$`43. Dropoff Food Waste Program` == 1] <- "Dropoff"
nc$FoodServiceType[nc$`43. Organics/ Food Waste Recycling Program` == 0] <- "None"
nc$FoodServiceType[nc$`43. Pilot Food Waste Program` == 1] <- "Pilot"
nc$FoodServiceType[nc$`9. Backyard Composting Program (BYC)` == 1] <- "Backyard"
nc <- nc[, -c(7, 34:39)] # drop the extra columns
# now yard waste, 36:39
nc$YardWasteServiceType <- NA
nc$YardWasteServiceType[nc$`49. Yard Waste Program` == 0] <- "None"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected at Convenience Center` == 1 |
nc$`49. Yard Waste Received at Yard Waste, Compost, or LCID Facility` == 1] <- "Dropoff"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected Curbside` == 1] <- "Curbside"
nc <- nc[, -c(36:39)] # drop the extra columns
# now to get rid of household fee and budget columns that I do not need: 85:102, 133:137
nc <- nc[, -c(85:102, 133:137)]
# now if they provide trash, recycling, and compost bins: 9,10,73:75
nc$ProvideTrashCart <- NA
nc$ProvRecycleBinorCart <- NA # do not have this cause I forgot to ask for it? this info does exist and is collected
nc$ProvideCompostBins <- NA
nc$ProvideTrashCart[nc$`Government- provided carts` == 1] <- "Yes"
nc$ProvideTrashCart[nc$`Government- provided carts` == 0] <- "No"
nc$ProvideCompostBins[nc$`10. BYC Bin Distribution/sales` == 1] <- "Yes"
nc$ProvideCompostBins[nc$`10. BYC Bin Distribution/sales` == 0] <- "No"
nc <- nc[, -c(9,10,73:75)]
# now the total tonnages for recycling and for trash: 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105
nc$SolidWasteTons <- NA
nc$RecyclingTons <- NA
nc$YardWasteTons <- NA
numcols <- c(31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:119)
nc[, numcols] <- apply(nc[, numcols], 2, function(x) as.numeric(as.character(x)))
# NOTE if yard waste cannot be properly classified because the variables showing where it goes are blank, let's look
#View(nc[!is.na(nc$`Tons Collected.2`) & (is.na(nc$`Tons sent to End User`) &
is.na(nc$`Tons Received at Local Gov. Mulch or Compost Facility`) &
is.na(nc$`Tons sent for Fuel Use`) &
is.na(nc$`Tons sent to LCID Landfill`) &
is.na(nc$`Tons sent to Other Public Facility`) &
is.na(nc$`Tons sent to Private Facility`)), c(35, 38, 41, 44, 47, 50, 100)])
# well, it's a 5th of all the columns. So... I think that it should actually not just be included, it should be dealt with later
divyardcols <- c(35, 38, 41, 44)
nc$DivertedYardWaste <- NA
nc$DivertedYardWaste <- apply(nc[, divyardcols], 1, function(x) sum(x, na.rm = TRUE))
trashyardcols <- c(47, 50)
nc$DisposedYardWaste <- apply(nc[, trashyardcols], 1, function(x) sum(x, na.rm = TRUE))
# now to make the uncategorized yard waste column
nc$UncatYardWaste <- nc$`Tons Collected.2` - (nc$DivertedYardWaste + nc$DisposedYardWaste)
# now to finally look at trash and recycling
nc$RecyclingTons <- nc$`Tons Collected.1` # this one is more accurate because it has NA's
nc$SolidWasteTons <- nc$`Tons Collected` # this is the trash column
nc <- nc[, -c(31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 119)]# now to drop the extra columns
# now the households served, of interest: View(nc[, c(1, 14:16, 27, 80, 85, 90)])
names(nc)[14] <- "Households"
# to look at the households served, I will break them out into the different programs
names(nc)[80] <- "HHServedTrash"
names(nc)[85] <- "HHServedRecycling"
names(nc)[90] <- "HHServedYard"
nc <- nc[, -c(14:16, 27)]
# now payment: PropertyTax, AnnualFee, TransferStationAccessFee, PerVisitFee, PAYT/SMART, TipFee, DropoffFee, CurbsideFee
# of interest: 65:73
names(nc)[61] <- "TipFee"
names(nc)[62] <- "PAYT/SMART"
names(nc)[64] <- "PropertyTax"
names(nc)[67] <- "PerHouseCharge"
# modify the PAYT one View(nc[, c(1, 62, 69)]); if one has PAYT, I will have both say PAYT
nc$`PAYT/SMART`[nc$`PAYT/SMART` == 1 | nc$`62. PAYT` == 1] <- "Yes"
nc$`PAYT/SMART`[nc$`PAYT/SMART` == 0] <- "No"
nc <- nc[, -c(63, 65:66, 68:69)]
# now EnforceRecycling, RecyclingEnforcePersonnel
names(nc)[5] <- "RecyclingEnforcePersonnel"
names(nc)
#### OOS Waste Data Project
## NC Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("/Users/dylanradley/Desktop/Trash Data Project OOS/Data/NC/")
### Waste + Data --------------------
nc <- import("NC FY2020-21 Recycling Data.xlsx")
nc.orig <- nc
# get the colnames in the right place
colnms <- nc[1, ]
names(nc) <- colnms
# drop the extra row
nc <- nc[-1, ]
# let's try to make the columns that we are interested in, by combining several together. First, type of recycling
nc$ReyclingServiceType <- NA
nc$ReyclingServiceType[nc$`14. No Recycling Program` == 1 | nc$`14. Recycling Program` == 0] <- "None"
nc$ReyclingServiceType[nc$`15. Curbside Recycling Program` == 1 & nc$`25. Dropoff Recycling Program` == 0] <- "Curbside"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 0] <- "Dropoff"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 1] <- "Both"
# now to drop a lot of the recycling cols, including tonnages for the different materials
nc <- nc[, -c(18:27, 37:41, 50:59, 66:101)]
# now to do the same for solid waste collection. Of interest: 6, 70 and 71, 87
nc$TrashServiceType <- NA
nc$TrashServiceType[nc$`5. Solid Waste Services` == 0] <- "None"
nc$TrashServiceType[grepl("at household", nc$`Frequency of primary collection`) |
grepl("at household", nc$`Frequency of secondary collection`)] <- "Curbside"
nc$TrashServiceType[grepl("convenience", nc$`Frequency of primary collection`) |
grepl("convenience", nc$`Frequency of secondary collection`)] <- "Dropoff"
nc$TrashServiceType[(grepl("convenience", nc$`Frequency of primary collection`) &
grepl("at household", nc$`Frequency of secondary collection`)) |
(grepl("at household", nc$`Frequency of primary collection`) &
grepl("convenience", nc$`Frequency of secondary collection`))] <- "Both"
nc$TrashServiceType[is.na(nc$TrashServiceType) & (nc$`5. Solid Waste Services` == 1 & nc$Curbside == 1)] <- "Curbside"
# drop the extra cols now
nc <- nc[, -c(6, 70:71, 87:88)]
# food waste service type. Of interest: 7, 34:39,
nc$FoodServiceType <- NA
nc$FoodServiceType[nc$`43. Curbside Food Waste Program` == 1] <- "Curbside"
nc$FoodServiceType[nc$`43. Dropoff Food Waste Program` == 1] <- "Dropoff"
nc$FoodServiceType[nc$`43. Organics/ Food Waste Recycling Program` == 0] <- "None"
nc$FoodServiceType[nc$`43. Pilot Food Waste Program` == 1] <- "Pilot"
nc$FoodServiceType[nc$`9. Backyard Composting Program (BYC)` == 1] <- "Backyard"
nc <- nc[, -c(7, 34:39)] # drop the extra columns
# now yard waste, 36:39
nc$YardWasteServiceType <- NA
nc$YardWasteServiceType[nc$`49. Yard Waste Program` == 0] <- "None"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected at Convenience Center` == 1 |
nc$`49. Yard Waste Received at Yard Waste, Compost, or LCID Facility` == 1] <- "Dropoff"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected Curbside` == 1] <- "Curbside"
nc <- nc[, -c(36:39)] # drop the extra columns
# now to get rid of household fee and budget columns that I do not need: 85:102, 133:137
nc <- nc[, -c(85:102, 133:137)]
# now if they provide trash, recycling, and compost bins: 9,10,73:75
nc$ProvideTrashCart <- NA
nc$ProvRecycleBinorCart <- NA # do not have this cause I forgot to ask for it? this info does exist and is collected
nc$ProvideCompostBins <- NA
nc$ProvideTrashCart[nc$`Government- provided carts` == 1] <- "Yes"
nc$ProvideTrashCart[nc$`Government- provided carts` == 0] <- "No"
nc$ProvideCompostBins[nc$`10. BYC Bin Distribution/sales` == 1] <- "Yes"
nc$ProvideCompostBins[nc$`10. BYC Bin Distribution/sales` == 0] <- "No"
nc <- nc[, -c(9,10,73:75)]
# now the total tonnages for recycling and for trash: 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105
nc$SolidWasteTons <- NA
nc$RecyclingTons <- NA
nc$YardWasteTons <- NA
numcols <- c(31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:119)
nc[, numcols] <- apply(nc[, numcols], 2, function(x) as.numeric(as.character(x)))
# NOTE if yard waste cannot be properly classified because the variables showing where it goes are blank, let's look
#View(nc[!is.na(nc$`Tons Collected.2`) & (is.na(nc$`Tons sent to End User`) &
is.na(nc$`Tons Received at Local Gov. Mulch or Compost Facility`) &
is.na(nc$`Tons sent for Fuel Use`) &
is.na(nc$`Tons sent to LCID Landfill`) &
is.na(nc$`Tons sent to Other Public Facility`) &
is.na(nc$`Tons sent to Private Facility`)), c(35, 38, 41, 44, 47, 50, 100)])
# well, it's a 5th of all the columns. So... I think that it should actually not just be included, it should be dealt with later
divyardcols <- c(35, 38, 41, 44)
nc$DivertedYardWaste <- NA
nc$DivertedYardWaste <- apply(nc[, divyardcols], 1, function(x) sum(x, na.rm = TRUE))
trashyardcols <- c(47, 50)
nc$DisposedYardWaste <- apply(nc[, trashyardcols], 1, function(x) sum(x, na.rm = TRUE))
# now to make the uncategorized yard waste column
nc$UncatYardWaste <- nc$`Tons Collected.2` - (nc$DivertedYardWaste + nc$DisposedYardWaste)
# now to finally look at trash and recycling
nc$RecyclingTons <- nc$`Tons Collected.1` # this one is more accurate because it has NA's
nc$SolidWasteTons <- nc$`Tons Collected` # this is the trash column
nc <- nc[, -c(31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 119)]# now to drop the extra columns
# now the households served, of interest: View(nc[, c(1, 14:16, 27, 80, 85, 90)])
names(nc)[14] <- "Households"
# to look at the households served, I will break them out into the different programs
names(nc)[80] <- "HHServedTrash"
names(nc)[85] <- "HHServedRecycling"
names(nc)[90] <- "HHServedYard"
nc <- nc[, -c(14:16, 27)]
# now payment: PropertyTax, AnnualFee, TransferStationAccessFee, PerVisitFee, PAYT/SMART, TipFee, DropoffFee, CurbsideFee
# of interest: 65:73
names(nc)[61] <- "TipFee"
names(nc)[62] <- "PAYT/SMART"
names(nc)[64] <- "PropertyTax"
names(nc)[67] <- "PerHouseCharge"
# modify the PAYT one View(nc[, c(1, 62, 69)]); if one has PAYT, I will have both say PAYT
nc$`PAYT/SMART`[nc$`PAYT/SMART` == 1 | nc$`62. PAYT` == 1] <- "Yes"
nc$`PAYT/SMART`[nc$`PAYT/SMART` == 0] <- "No"
nc <- nc[, -c(63, 65:66, 68:69)]
# now EnforceRecycling, RecyclingEnforcePersonnel
names(nc)[5] <- "RecyclingEnforcePersonnel"
# NOTE: if you receive additional data you can look at single or multistream. As of now, it is getting dropped in the
# next section
# now to drop extra cols: 3, 6:60, 65:70, 72:75, 77:80, 82:89
nc <- nc[, -c(3, 6:60, 65:70, 72:75, 77:80, 82:89)]
View(nc)
names(nc)
names(nc)[1] <- "GovUnit"
names(nc)[3] <- "Population"
nc$State <- "NC"
setwd("~/Desktop/Trash Data Project OOS/Data/Census Data/")
areas <- import("NCMuncArea.csv")
names(areas)
areas <- areas[, c(1,2)] # only need to keep the land area
View(areas)
areas$`Municipal Name` <- toupper(areas$`Municipal Name`)
test <- merge(nc, areas, by.x = "GovUnit", by.y = "Municipal Name")
View(test)
nc <- merge(nc, areas, by.x = "GovUnit", by.y = "Municipal Name") # this is a merge that will ONLY keep the ones for which
nc$PopulationDensity <- nc$Population / nc$LANDAREA
