names(dta)[30] <- "Population"
dta <- dta[, -c(35,37)]
# merge
dta <- bind_rows(dta, fl)
View(dta)
nc$TrashServiceType <- NA
#### OOS Waste Data Project
## NC Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("/Users/dylanradley/Desktop/Trash Data Project OOS/Data/NC/")
### Waste + Data --------------------
nc <- import("NC FY2020-21 Recycling Data.xlsx")
nc.orig <- nc
# get the colnames in the right place
colnms <- nc[1, ]
names(nc) <- colnms
# drop the extra row
nc <- nc[-1, ]
# let's try to make the columns that we are interested in, by combining several together. First, type of recycling
nc$ReyclingServiceType <- NA
nc$ReyclingServiceType[nc$`14. No Recycling Program` == 1 | nc$`14. Recycling Program` == 0] <- "None"
nc$ReyclingServiceType[nc$`15. Curbside Recycling Program` == 1 & nc$`25. Dropoff Recycling Program` == 0] <- "Curbside"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 0] <- "Dropoff"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 1] <- "Both"
# now to drop a lot of the recycling cols, including tonnages for the different materials
nc <- nc[, -c(18:27, 37:41, 50:59, 66:101)]
# now to do the same for solid waste collection. Of interest: 6,
nc$TrashServiceType <- NA
### Census Data --------------------
setwd("~/Desktop/Trash Data Project OOS/Data/Census Data/")
censusmun <- import("NCMunicipalCensus.csv")
# drop extra cols
censusmun <- censusmun[, -c(1, 3, 5:51, 53:55)] # these are totally extra, have like no info
censusmun <- censusmun[, -c(5, 7, 9:16)] # these are extra cols for pop density and for number of households
# rename cols
names(censusmun)
names(censusmun)[1] <- "Municipality"
names(censusmun)[2] <- "state"
names(censusmun)[4] <- "Population"
names(censusmun)[5] <- "PopulationDensity"
names(censusmun)[6] <- "Households"
names(censusmun)[7] <- "PopOver25"
names(censusmun)[8] <- "LessHS"
names(censusmun)[9] <- "HS"
names(censusmun)[10] <- "BachelororMore"
names(censusmun)[11] <- "MedIncome"
names(censusmun)[12] <- "AvgIncome"
names(censusmun)[13] <- "Gini"
# calculate the percentages for different educational attainments then drop extra cols for that
censusmun$PctLessHS <- censusmun$LessHS / censusmun$PopOver25
censusmun$PctHS <- censusmun$HS / censusmun$PopOver25
censusmun$PctBachelororMore <- censusmun$BachelororMore / censusmun$PopOver25
censusmun <- censusmun[, -c(7:10)]
# start making a common id by removing extra words and combining with state
censusmun$Municipality <- gsub("Township [[:digit:]]+, ", "", censusmun$Municipality)
censusmun$Municipality <- gsub(" North Carolina", "", censusmun$Municipality)
test <- sapply(strsplit(censusmun$Municipality, ",", fixed = TRUE), `[`,1) # this gets rid of all the county stuff
# that is not needed
censusmun$Municipality <- sapply(strsplit(censusmun$Municipality, ",", fixed = TRUE), `[`,1)
censusmun$Municipality <- gsub(" township", "", censusmun$Municipality)
censusmun$Municipality <- toupper(censusmun$Municipality) # make it all uppercase
notmissing <- nc$`Local Government Name`[nc$`Local Government Name` %in% censusmun$Municipality]
missing <- nc$`Local Government Name`[nc$`Local Government Name` %notin% censusmun$Municipality]
missing <- missing[!grepl("COUNTY", missing)]
# there are many many missing municipalities that I will have to work at
# trying to look at place data
demohaus <- import("NCPlaceDemo&Housing/ACSDP5Y2020.DP05_data_with_overlays_2022-07-19T151320.csv")
econ <- import("NCPlaceEconChara/ACSDP5Y2020.DP03_data_with_overlays_2022-06-22T130104.csv")
housing <- import("NCPlaceHousingChara/ACSDP5Y2020.DP04_data_with_overlays_2022-07-19T151733.csv")
social <- import("NCPlaceSocialChara/ACSDP5Y2020.DP02_data_with_overlays_2022-07-19T151708.csv")
# see if there is a better match for names
places <- demohaus$NAME
places <- places[-1]
places <- gsub(", North Carolina", "", places)
places <- gsub(" town", "", places)
places <- gsub(" CDP", "", places)
places <- gsub(" city", "", places)
places <- toupper(places)
notmissingp <- nc$`Local Government Name`[nc$`Local Government Name` %in% places]
missingp <- nc$`Local Government Name`[nc$`Local Government Name` %notin% places]
missingp <- missingp[!grepl("COUNTY", missingp)]
#### OOS Waste Data Project
## NC Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("/Users/dylanradley/Desktop/Trash Data Project OOS/Data/NC/")
### Waste + Data --------------------
nc <- import("NC FY2020-21 Recycling Data.xlsx")
nc.orig <- nc
# get the colnames in the right place
colnms <- nc[1, ]
names(nc) <- colnms
# drop the extra row
nc <- nc[-1, ]
# let's try to make the columns that we are interested in, by combining several together. First, type of recycling
nc$ReyclingServiceType <- NA
nc$ReyclingServiceType[nc$`14. No Recycling Program` == 1 | nc$`14. Recycling Program` == 0] <- "None"
nc$ReyclingServiceType[nc$`15. Curbside Recycling Program` == 1 & nc$`25. Dropoff Recycling Program` == 0] <- "Curbside"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 0] <- "Dropoff"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 1] <- "Both"
# now to drop a lot of the recycling cols, including tonnages for the different materials
nc <- nc[, -c(18:27, 37:41, 50:59, 66:101)]
# now to do the same for solid waste collection. Of interest: 6,
View(nc)
#### OOS Waste Data Project
## NC Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("/Users/dylanradley/Desktop/Trash Data Project OOS/Data/NC/")
### Waste + Data --------------------
nc <- import("NC FY2020-21 Recycling Data.xlsx")
nc.orig <- nc
# get the colnames in the right place
colnms <- nc[1, ]
names(nc) <- colnms
# drop the extra row
nc <- nc[-1, ]
# let's try to make the columns that we are interested in, by combining several together. First, type of recycling
nc$ReyclingServiceType <- NA
nc$ReyclingServiceType[nc$`14. No Recycling Program` == 1 | nc$`14. Recycling Program` == 0] <- "None"
nc$ReyclingServiceType[nc$`15. Curbside Recycling Program` == 1 & nc$`25. Dropoff Recycling Program` == 0] <- "Curbside"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 0] <- "Dropoff"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 1] <- "Both"
# now to drop a lot of the recycling cols, including tonnages for the different materials
nc <- nc[, -c(18:27, 37:41, 50:59, 66:101)]
# now to do the same for solid waste collection. Of interest: 6, 70 and 71, 87
nc$TrashServiceType <- NA
View(nc[, c(1,6,70,71,87,155)])
View(nc[, c(1,6,70,71,87,88,155)])
?grepl
nc$TrashServiceType[nc$`5. Solid Waste Services` == 0] <- "None"
nc$TrashServiceType[grepl("at household", nc$`Frequency of primary collection`) |
grepl("at household", nc$`Frequency of secondary collection`)] <- "Curbside"
nc$TrashServiceType[grepl("convenience", nc$`Frequency of primary collection`) |
grepl("convenience", nc$`Frequency of secondary collection`)] <- "Dropoff"
nc$TrashServiceType[(grepl("convenience", nc$`Frequency of primary collection`) &
grepl("at household", nc$`Frequency of secondary collection`)) |
(grepl("at household", nc$`Frequency of primary collection`) &
grepl("convenience", nc$`Frequency of secondary collection`))] <- "Both"
View(nc[, c(1,6,70.71.87,88,155)])
View(nc[, c(1,6,70,71,87,88,155)])
nc$TrashServiceType[is.na(nc$TrashServiceType) & (nc$`5. Solid Waste Services` == 1 & nc$Curbside == 1)] <- "Curbside"
View(nc[, c(1,6,70,71,87,88,155)])
nc <- nc[, -c(6, 70:71, 87:88)]
View(nc)
#### OOS Waste Data Project
## NC Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("/Users/dylanradley/Desktop/Trash Data Project OOS/Data/NC/")
### Waste + Data --------------------
nc <- import("NC FY2020-21 Recycling Data.xlsx")
nc.orig <- nc
# get the colnames in the right place
colnms <- nc[1, ]
names(nc) <- colnms
# drop the extra row
nc <- nc[-1, ]
# let's try to make the columns that we are interested in, by combining several together. First, type of recycling
nc$ReyclingServiceType <- NA
nc$ReyclingServiceType[nc$`14. No Recycling Program` == 1 | nc$`14. Recycling Program` == 0] <- "None"
nc$ReyclingServiceType[nc$`15. Curbside Recycling Program` == 1 & nc$`25. Dropoff Recycling Program` == 0] <- "Curbside"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 0] <- "Dropoff"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 1] <- "Both"
# now to drop a lot of the recycling cols, including tonnages for the different materials
nc <- nc[, -c(18:27, 37:41, 50:59, 66:101)]
# now to do the same for solid waste collection. Of interest: 6, 70 and 71, 87
nc$TrashServiceType <- NA
nc$TrashServiceType[nc$`5. Solid Waste Services` == 0] <- "None"
nc$TrashServiceType[grepl("at household", nc$`Frequency of primary collection`) |
grepl("at household", nc$`Frequency of secondary collection`)] <- "Curbside"
nc$TrashServiceType[grepl("convenience", nc$`Frequency of primary collection`) |
grepl("convenience", nc$`Frequency of secondary collection`)] <- "Dropoff"
nc$TrashServiceType[(grepl("convenience", nc$`Frequency of primary collection`) &
grepl("at household", nc$`Frequency of secondary collection`)) |
(grepl("at household", nc$`Frequency of primary collection`) &
grepl("convenience", nc$`Frequency of secondary collection`))] <- "Both"
nc$TrashServiceType[is.na(nc$TrashServiceType) & (nc$`5. Solid Waste Services` == 1 & nc$Curbside == 1)] <- "Curbside"
nc <- nc[, -c(6, 70:71, 87:88)]
`%notin%` <- Negate(`%in%`)
setwd("~/Desktop/Trash Data Project OOS/Files/")
### MA + RI --------------------
ma <- import("ma.csv")
ri <- import("ri.csv")
dta <- bind_rows(ma, ri)
dta <- dta[, -1] # drop V1
dta <- dta[, -c(7,8)] # drop food and  yard waste because it's only in MA and it is already added in with totals
### (MA, RI) + ME --------------------
me <- import("me.csv")
me <- me[, -1] # drop v1
dta <- bind_rows(dta, me)
# get rid of v1 and population
dta <- dta[, -c(43, 45)]
### (MA, RI, ME) + Census Data --------------------
setwd("~/Desktop/Trash Data Project OOS/Data/Census Data/")
marime <- import("MARIMECityData.csv")
# drop extra cols
marime <- marime[, -c(1:3, 5:51, 53:55)] # these are totally extra, have like no info
marime <- marime[, -c(4, 6, 8:15)] # these are extra cols for pop density and for number of households
# rename cols
names(marime)
names(marime)[1] <- "state"
names(marime)[2] <- "Municipality"
names(marime)[3] <- "Population"
names(marime)[4] <- "PopulationDensity"
names(marime)[5] <- "Households"
names(marime)[6] <- "PopOver25"
names(marime)[7] <- "LessHS"
names(marime)[8] <- "HS"
names(marime)[9] <- "BachelororMore"
names(marime)[10] <- "MedIncome"
names(marime)[11] <- "AvgIncome"
names(marime)[12] <- "Gini"
# calculate the percentages for different educational attainments then drop extra cols for that
marime$PctLessHS <- marime$LessHS / marime$PopOver25
marime$PctHS <- marime$HS / marime$PopOver25
marime$PctBachelororMore <- marime$BachelororMore / marime$PopOver25
marime <- marime[, -c(6:9)]
# start making a common id by removing extra words and combining with state
marime$Municipality <- gsub(" town", "", marime$Municipality)
marime$Municipality <- gsub(" Town", "", marime$Municipality)# this is a little quick and dirty, but I think it works
marime$Municipality <- gsub(" city", "", marime$Municipality)
marime$Municipality <- gsub(" plantation", "", marime$Municipality)
marime$state <- toupper(marime$state)
marime <- marime %>% unite("id", 2:1, sep = "---", remove = TRUE)
dta <- dta %>% unite("id", 2:1, sep = "---", remove = TRUE)
# see what ones will not get merged then fix them NOTE: I will be leaving most of the maine ones right now, until I
# have updated ME data and know that I may actually be using it.
dta$id[dta$id %notin% marime$id]
marime$id[marime$id == "Manchester-by-the-Sea---MA"] <- "Manchester---MA"
dta <- merge(dta, marime, by = "id")
dta <- separate(dta, id,
c("Municipality", "State"),
sep = "---")
### (MA, RI, ME) + FL --------------------
setwd("~/Desktop/Trash Data Project OOS/Files/")
fl <- import("fl.csv")
fl <- fl[, -1] # drop V1
names(dta)[1] <- "GovUnit" # something that can be standard between the municipalities of most of our data and the
# counties in Florida
names(fl)[1] <- "GovUnit"
names(dta)[18] <- "TransferStationAccessFee"
# drop the .y populations and households, cause we want to use what the municipalities reported, then rename them
names(dta)[3] <- "Households"
names(dta)[30] <- "Population"
dta <- dta[, -c(35,37)]
# merge
dta <- bind_rows(dta, fl)
View(dta)
nc$FoodServiceType <- NA
View(nc[, 1,7,34:39,151])
View(nc[, c(1,7,34:39,151)])
nc$FoodServiceType[nc$`43. Curbside Food Waste Program` == 1] <- "Curbside"
nc$FoodServiceType[nc$`43. Dropoff Food Waste Program` == 1] <- "Dropoff"
nc$FoodServiceType[nc$`43. Organics/ Food Waste Recycling Program` == 0] <- "None"
nc$FoodServiceType[nc$`43. Pilot Food Waste Program` == 1] <- "Pilot"
nc$FoodServiceType[nc$`9. Backyard Composting Program (BYC)` == 1] <- "Backyard"
View(nc[, c(1,7,34:39,151)])
nc <- nc[, -c(7, 34:39)]
View(dta)
nc$YardWasteServiceType <- NA
#### OOS Waste Data Project
## NC Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("/Users/dylanradley/Desktop/Trash Data Project OOS/Data/NC/")
### Waste + Data --------------------
nc <- import("NC FY2020-21 Recycling Data.xlsx")
nc.orig <- nc
# get the colnames in the right place
colnms <- nc[1, ]
names(nc) <- colnms
# drop the extra row
nc <- nc[-1, ]
# let's try to make the columns that we are interested in, by combining several together. First, type of recycling
nc$ReyclingServiceType <- NA
nc$ReyclingServiceType[nc$`14. No Recycling Program` == 1 | nc$`14. Recycling Program` == 0] <- "None"
nc$ReyclingServiceType[nc$`15. Curbside Recycling Program` == 1 & nc$`25. Dropoff Recycling Program` == 0] <- "Curbside"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 0] <- "Dropoff"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 1] <- "Both"
# now to drop a lot of the recycling cols, including tonnages for the different materials
nc <- nc[, -c(18:27, 37:41, 50:59, 66:101)]
# now to do the same for solid waste collection. Of interest: 6, 70 and 71, 87
nc$TrashServiceType <- NA
nc$TrashServiceType[nc$`5. Solid Waste Services` == 0] <- "None"
nc$TrashServiceType[grepl("at household", nc$`Frequency of primary collection`) |
grepl("at household", nc$`Frequency of secondary collection`)] <- "Curbside"
nc$TrashServiceType[grepl("convenience", nc$`Frequency of primary collection`) |
grepl("convenience", nc$`Frequency of secondary collection`)] <- "Dropoff"
nc$TrashServiceType[(grepl("convenience", nc$`Frequency of primary collection`) &
grepl("at household", nc$`Frequency of secondary collection`)) |
(grepl("at household", nc$`Frequency of primary collection`) &
grepl("convenience", nc$`Frequency of secondary collection`))] <- "Both"
nc$TrashServiceType[is.na(nc$TrashServiceType) & (nc$`5. Solid Waste Services` == 1 & nc$Curbside == 1)] <- "Curbside"
# drop the extra cols now
nc <- nc[, -c(6, 70:71, 87:88)]
# food waste service type. Of interest: 7, 34:39,
nc$FoodServiceType <- NA
nc$FoodServiceType[nc$`43. Curbside Food Waste Program` == 1] <- "Curbside"
nc$FoodServiceType[nc$`43. Dropoff Food Waste Program` == 1] <- "Dropoff"
nc$FoodServiceType[nc$`43. Organics/ Food Waste Recycling Program` == 0] <- "None"
nc$FoodServiceType[nc$`43. Pilot Food Waste Program` == 1] <- "Pilot"
nc$FoodServiceType[nc$`9. Backyard Composting Program (BYC)` == 1] <- "Backyard"
nc <- nc[, -c(7, 34:39)] # drop the extra columns
# now yard waste
nc$YardWasteServiceType <- NA
`%notin%` <- Negate(`%in%`)
setwd("~/Desktop/Trash Data Project OOS/Files/")
### MA + RI --------------------
ma <- import("ma.csv")
ri <- import("ri.csv")
dta <- bind_rows(ma, ri)
dta <- dta[, -1] # drop V1
dta <- dta[, -c(7,8)] # drop food and  yard waste because it's only in MA and it is already added in with totals
### (MA, RI) + ME --------------------
me <- import("me.csv")
me <- me[, -1] # drop v1
dta <- bind_rows(dta, me)
# get rid of v1 and population
dta <- dta[, -c(43, 45)]
### (MA, RI, ME) + Census Data --------------------
setwd("~/Desktop/Trash Data Project OOS/Data/Census Data/")
marime <- import("MARIMECityData.csv")
# drop extra cols
marime <- marime[, -c(1:3, 5:51, 53:55)] # these are totally extra, have like no info
marime <- marime[, -c(4, 6, 8:15)] # these are extra cols for pop density and for number of households
# rename cols
names(marime)
names(marime)[1] <- "state"
names(marime)[2] <- "Municipality"
names(marime)[3] <- "Population"
names(marime)[4] <- "PopulationDensity"
names(marime)[5] <- "Households"
names(marime)[6] <- "PopOver25"
names(marime)[7] <- "LessHS"
names(marime)[8] <- "HS"
names(marime)[9] <- "BachelororMore"
names(marime)[10] <- "MedIncome"
names(marime)[11] <- "AvgIncome"
names(marime)[12] <- "Gini"
# calculate the percentages for different educational attainments then drop extra cols for that
marime$PctLessHS <- marime$LessHS / marime$PopOver25
marime$PctHS <- marime$HS / marime$PopOver25
marime$PctBachelororMore <- marime$BachelororMore / marime$PopOver25
marime <- marime[, -c(6:9)]
# start making a common id by removing extra words and combining with state
marime$Municipality <- gsub(" town", "", marime$Municipality)
marime$Municipality <- gsub(" Town", "", marime$Municipality)# this is a little quick and dirty, but I think it works
marime$Municipality <- gsub(" city", "", marime$Municipality)
marime$Municipality <- gsub(" plantation", "", marime$Municipality)
marime$state <- toupper(marime$state)
marime <- marime %>% unite("id", 2:1, sep = "---", remove = TRUE)
dta <- dta %>% unite("id", 2:1, sep = "---", remove = TRUE)
# see what ones will not get merged then fix them NOTE: I will be leaving most of the maine ones right now, until I
# have updated ME data and know that I may actually be using it.
dta$id[dta$id %notin% marime$id]
marime$id[marime$id == "Manchester-by-the-Sea---MA"] <- "Manchester---MA"
dta <- merge(dta, marime, by = "id")
dta <- separate(dta, id,
c("Municipality", "State"),
sep = "---")
### (MA, RI, ME) + FL --------------------
setwd("~/Desktop/Trash Data Project OOS/Files/")
fl <- import("fl.csv")
fl <- fl[, -1] # drop V1
names(dta)[1] <- "GovUnit" # something that can be standard between the municipalities of most of our data and the
# counties in Florida
names(fl)[1] <- "GovUnit"
names(dta)[18] <- "TransferStationAccessFee"
# drop the .y populations and households, cause we want to use what the municipalities reported, then rename them
names(dta)[3] <- "Households"
names(dta)[30] <- "Population"
dta <- dta[, -c(35,37)]
# merge
dta <- bind_rows(dta, fl)
View(dta)
View(nc[, c(1, 36:39, 145)])
nc$YardWasteServiceType[nc$`49. Yard Waste Program` == 0] <- "None"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected at Convenience Center` == 1 |
nc$`49. Yard Waste Received at Yard Waste, Compost, or LCID Facility` == 1] <- "Dropoff"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected Curbside` == 1] <- "Curbside"
View(nc[, c(1, 36:39, 145)])
nc <- nc[, -c(36:39)] # drop the extra columns
#### OOS Waste Data Project
## NC Municipal Data
## Dylan Radley
library(rio)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
rm(list = ls())
`%notin%` <- Negate(`%in%`)
setwd("/Users/dylanradley/Desktop/Trash Data Project OOS/Data/NC/")
### Waste + Data --------------------
nc <- import("NC FY2020-21 Recycling Data.xlsx")
nc.orig <- nc
# get the colnames in the right place
colnms <- nc[1, ]
names(nc) <- colnms
# drop the extra row
nc <- nc[-1, ]
# let's try to make the columns that we are interested in, by combining several together. First, type of recycling
nc$ReyclingServiceType <- NA
nc$ReyclingServiceType[nc$`14. No Recycling Program` == 1 | nc$`14. Recycling Program` == 0] <- "None"
nc$ReyclingServiceType[nc$`15. Curbside Recycling Program` == 1 & nc$`25. Dropoff Recycling Program` == 0] <- "Curbside"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 0] <- "Dropoff"
nc$ReyclingServiceType[nc$`25. Dropoff Recycling Program` == 1 & nc$`15. Curbside Recycling Program` == 1] <- "Both"
# now to drop a lot of the recycling cols, including tonnages for the different materials
nc <- nc[, -c(18:27, 37:41, 50:59, 66:101)]
# now to do the same for solid waste collection. Of interest: 6, 70 and 71, 87
nc$TrashServiceType <- NA
nc$TrashServiceType[nc$`5. Solid Waste Services` == 0] <- "None"
nc$TrashServiceType[grepl("at household", nc$`Frequency of primary collection`) |
grepl("at household", nc$`Frequency of secondary collection`)] <- "Curbside"
nc$TrashServiceType[grepl("convenience", nc$`Frequency of primary collection`) |
grepl("convenience", nc$`Frequency of secondary collection`)] <- "Dropoff"
nc$TrashServiceType[(grepl("convenience", nc$`Frequency of primary collection`) &
grepl("at household", nc$`Frequency of secondary collection`)) |
(grepl("at household", nc$`Frequency of primary collection`) &
grepl("convenience", nc$`Frequency of secondary collection`))] <- "Both"
nc$TrashServiceType[is.na(nc$TrashServiceType) & (nc$`5. Solid Waste Services` == 1 & nc$Curbside == 1)] <- "Curbside"
# drop the extra cols now
nc <- nc[, -c(6, 70:71, 87:88)]
# food waste service type. Of interest: 7, 34:39,
nc$FoodServiceType <- NA
nc$FoodServiceType[nc$`43. Curbside Food Waste Program` == 1] <- "Curbside"
nc$FoodServiceType[nc$`43. Dropoff Food Waste Program` == 1] <- "Dropoff"
nc$FoodServiceType[nc$`43. Organics/ Food Waste Recycling Program` == 0] <- "None"
nc$FoodServiceType[nc$`43. Pilot Food Waste Program` == 1] <- "Pilot"
nc$FoodServiceType[nc$`9. Backyard Composting Program (BYC)` == 1] <- "Backyard"
nc <- nc[, -c(7, 34:39)] # drop the extra columns
# now yard waste, 36:39
nc$YardWasteServiceType <- NA
nc$YardWasteServiceType[nc$`49. Yard Waste Program` == 0] <- "None"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected at Convenience Center` == 1 |
nc$`49. Yard Waste Received at Yard Waste, Compost, or LCID Facility` == 1] <- "Dropoff"
nc$YardWasteServiceType[nc$`49. Yard Waste Collected Curbside` == 1] <- "Curbside"
nc <- nc[, -c(36:39)] # drop the extra columns
# now to get rid of household fee and budget columns that I do not need: 85:102, 133:137
nc <- nc[, -c(85:102, 133:137)]
nc$ProvideTrashCart <- NA
nc$ProvRecycleBinorCart <- NA
nc$ProvideCompostBins <- NA
View(nc[, c(1,9,10,73:75,212:214)])
View(nc[, c(1,9,10,73:75,119:121)])
View(nc.orig)
nc$ProvideTrashCart[nc$`Government- provided carts` == 1] <- "Yes"
nc$ProvideTrashCart[nc$`Government- provided carts` == 0] <- "No"
nc$ProvideCompostBins[nc$`10. BYC Bin Distribution/sales` == 1] <- "Yes"
nc$ProvideCompostBins[nc$`10. BYC Bin Distribution/sales` == 0] <- "No"
View(nc[, c(1,9,10,73:75,119:121)])
nc <- nc[, -c(9,10,73:75)]
nc$SolidWasteTons <- NA
nc$RecyclingTons <- NA
View(nc[, c(1, 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:118)])
numcols <- c(31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:118)
nc[, numcols] <- apply(nc[, numcols], 2, function(x) as.numeric(as.character(x)))
View(nc)
View(nc[, c(1, 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:118)])
nc$SolidWasteTons <- NA
nc$RecyclingTons <- NA
nc$YardWasteTons <- NA
numcols <- c(31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:119)
nc[, numcols] <- apply(nc[, numcols], 2, function(x) as.numeric(as.character(x)))
View(nc[, c(1, 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:119)])
yardcols <- c(100, 35, 38, 41, 44, 47, 50)
nc$YardWasteTons <- apply(nc[, "YardWasteTons"], 1, function(x) sum(x, na.rm = TRUE))
nc$YardWasteTons <- apply(nc[, YardWasteTons], 1, function(x) sum(x, na.rm = TRUE))
nc$YardWasteTons <- apply(nc[, yardcols], 1, function(x) sum(x, na.rm = TRUE))
View(nc[, c(1, 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:119)])
yardcols <- c(35, 38, 41, 44, 47, 50)
nc$YardWasteTons <- apply(nc[, yardcols], 1, function(x) sum(x, na.rm = TRUE))
View(nc[, c(1, 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:119)])
recyclingcols <- c(31, 35, 38, 41, 44)
nc$RecyclingTons <- apply(nc[, recyclingcols], 1, function(x) sum(x, na.rm = TRUE))
trashcols <- c(47, 50, 88)
nc$SolidWasteTons <- apply(nc[, trashcols], 1, function(x) sum(x, na.rm = TRUE))
View(nc[, c(1, 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:119)])
nc$SolidWasteTons[is.na(nc$`Tons Collected`)] <- NA
View(nc[, c(1, 31, 35, 38, 41, 44, 47, 50, 88, 94, 100, 105, 117:119)])
